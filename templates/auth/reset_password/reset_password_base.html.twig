<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
{#    , interactive-widget=resizes-content#}
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{{ block('title') }}</title>
{#    <link rel="stylesheet" href="{{ asset('assets/css/bootstrap-4.5.min.css') }}" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">#}
    <link rel="stylesheet" href="{{ asset('assets/line-awesome/css/line-awesome.min.css') }}">

    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #7B68EE;
            --background-color: #F5F0FF;
            --text-color: #333333;
            --border-color: #E5E5E5;
            --placeholder-color: #888888;
            --link-color: #7B68EE;
            --border-radius: 10px;
            --box-shadow: 0 8px 24px rgba(123, 104, 238, 0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        body {
            /* background: linear-gradient(135deg, #F5F0FF 0%, #E8E0FF 100%); */
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            line-height: 1.5;
        }

        .form-container {
            background-color: white;
            padding: 3rem;
            border-radius: var(--border-radius);
            box-shadow:
                /* Kabartma efekti için */
                0px 0px 0px rgba(255, 255, 255, 0.8),
                1px 1px 5px rgba(0, 0, 0, 0.15),
                    /* Neon efekti için */
                0 0 255px #ffffff,
                0 0 305px #755fff,
                0 0 295px #ffffff;
            width: 100%;
            max-width: 460px;
        }

        .logo {
            text-align: center;
            margin-bottom: 2rem;
            /* color: var(--primary-color); */
            /* font-size: 1.8rem; */
            /* font-weight: 600; */
        }


        .logo img{

            width: 60%;
        }

        .login-header {
            text-align: center;
            margin-bottom: 0.5rem;
        }

        .login-header h1 {
            color: var(--text-color);
            font-size: 1.75rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .login-header p {
            color: var(--placeholder-color);
            font-size: 0.95rem;
            margin-bottom: 2.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--text-color);
            font-size: 0.75rem;
        }

        .form-group input {
            width: 100%;
            padding: 0.8rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 0.9rem;
            transition: all 0.2s;
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(123, 104, 238, 0.1);
        }

        .password-container {
            position: relative;
        }

        .password-container .toggle-password {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: var(--placeholder-color);
        }

        .action-button {
            width: 100%;
            padding: 0.7rem;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            font-size: 0.8rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
            margin-top: 1rem;
        }

        .action-button:hover {
            background-color: #6A5ACD;
        }

        .forgot-password {
            text-align: right;
            margin: 1rem 0 1rem;
        }

        .forgot-password a {
            color: var(--placeholder-color);
            text-decoration: none;
            font-size: 0.8rem;
        }

        .create-account {
            text-align: center;
            margin-top: 1.5rem;
            color: var(--placeholder-color);
            font-size: 0.8rem;
        }

        .create-account a {
            color: var(--link-color);
            text-decoration: none;
            font-weight: 500;
        }

        .create-account a:hover {
            text-decoration: underline;
        }
        .mb-2{
            margin-bottom: 2rem;
        }

        @media (max-width: 480px) {
            .form-container {
                margin: 1rem;
                padding: 2rem;
            }
        }
        .text-muted{
            color: #6c757d !important;
        }
        .form-text {
            display: block;
            margin-top: .25rem;
        }
        .small, small {
            font-size: 80%;
            font-weight: 400;
        }
        dl, ol, ul {
            margin-top: 0;
            margin-bottom: 1rem;
            padding-left: 2rem;
            margin-block-start: 1em;
        }
        .success {
            color: #1c7430;
        }

        ul {
            list-style-type: none;
        }
    </style>
</head>
<body>
<div class="form-container">
    {% block back_to_login_block %}
        {% import "auth/macros/back_to_login_button.html.twig" as back_to_login_button %}
        {{ back_to_login_button.back_to_login_button() }}
    {% endblock %}

    <div class="logo">
        <img src="{{ asset('assets/icons/logo.png') }}" alt="">
    </div>

    {#    <div id="main-wrapper" class="form-container">#}
{#        #}{#        <div class="row justify-content-center"> #}

{#        #}{#            <div class=""> #}
{#        <div class="card border-0">#}
{#            <div class="card-body p-0">#}
{#                <div class="no-gutters">#}
{#                    <div class="p-5">#}
{#                        <div class="mb-5">#}
{#                            <h3 class="h4 font-weight-bold text-theme">#}
{#                                {% block title %}#}

{#                                {% endblock %}#}
{#                            </h3>#}
{#                        </div>#}

{#                        {% block content %}#}
{#                        {% endblock content %}#}
{#                        <div class="footer mt-4">#}

{#                        {% block footer %}#}

{#                        {% endblock %}#}
{#                    </div>#}
{#                    </div>#}

{#                </div>#}

{#            </div>#}
{#            <!-- end card-body -->#}

{#            <!-- end card -->#}
{#            <div class="card-footer">#}

{#            </div>#}
{#        </div>#}

{#        <!-- end row -->#}

{#        #}{#            </div> #}
{#        <!-- end col -->#}
{#        #}{#        </div> #}
{#        <!-- Row -->#}
{#    </div>#}
    {% block content %}
    {% endblock content %}
</div>
<script src="{{ asset('assets/js/password-strength.js') }}"></script>


<script>

    // Usage
    new PasswordStrength({
        selector: ".password-strength-meter",
        infoSelector: "#password-strength-info-div",

        // descriptions: {
        //     length: "Must contain at least 8 characters",
        //     lowercase: "Must include a lowercase letter",
        //     uppercase: "Must include an uppercase letter",
        //     specialChar: "Must contain a special character"
        // },
        // callback: function (key, isValid) {
        //     console.log(key + " is " + (isValid ? "valid" : "invalid"));
        // },
    });


    const inputs = document.querySelectorAll('input');

    // Her input için click event listener ekle
    // inputs.forEach(input => {
    //     console.log("newsy")
    //     input.addEventListener('click', function() {
    //         // Input'un pozisyonunu hesapla
    //         const rect = this.getBoundingClientRect();
    //         console.log("rect",rect.top)
    //         const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    //         console.log("Scroll yukardan kaç piksel aşağıda",scrollTop)
    //
    //         console.log("Sayfa Height",window.innerHeight)
    //         console.log("Tıklanan elementin height",rect.height)
    //
    //         // Ekranın ortasına scroll yap
    //         const targetScroll = rect.top + scrollTop - (window.innerHeight / 2) + (rect.height / 2);
    //         console.log("targetScroll",targetScroll)
    //
    //         // Smooth scroll efekti ile scroll yap
    //         window.scrollTo({
    //             top: targetScroll,
    //             behavior: 'smooth'
    //         });
    //     });
    // });
    inputs.forEach((input) => {
        input.addEventListener("focus", (event) => {
            console.log("focus")

            const focusedElement = event.target;
            // Eğer odaklanan bir input alanıysa işlem yap
            if (focusedElement.tagName === "INPUT" || focusedElement.tagName === "TEXTAREA") {
                // Elementin sayfa içindeki dikey pozisyonunu al
                const elementPosition = focusedElement.getBoundingClientRect().top ;
                console.log("elementPosition",elementPosition,window.innerHeight)



                // Sayfanın şu anki scroll pozisyonu
                const currentScroll = window.pageYOffset || document.documentElement.scrollTop;

                // Elementin bulunduğu pozisyona göre sayfa scroll'unu ayarla
                // Ekstra bir offset eklemek istersen (örneğin 20px yukarı), bunu ekle:
                const offset = -30;

                window.scrollTo({
                    top: currentScroll + elementPosition + offset,
                    behavior: "smooth", // Scroll animasyonlu olsun
                });
            }

        });
    });
</script>
<script>



    function togglePassword(toggleElement) {
        // Parent .form-group elementini bul
        const formGroup = toggleElement.closest('.form-group');
        if (formGroup) {
            // .form-group içinde type="password" olan input'u seç
            const passwordInput = formGroup.querySelector('input[type="password"], input[type="text"]');
            const hidePasswordIcon = formGroup.querySelector('#hide-password');
            const showPasswordIcon = formGroup.querySelector('#show-password');

            if (passwordInput) {
                // Password input tipini değiştir
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);

                // İkonları değiştir
                if (type === 'password') {
                    hidePasswordIcon.style.display = 'inline-block';
                    showPasswordIcon.style.display = 'none';
                } else {
                    hidePasswordIcon.style.display = 'none';
                    showPasswordIcon.style.display = 'inline-block';
                }
            }
        }

        // const passwordInput = self;
        // const togglePassword = document.querySelector('.toggle-password');
        // const hidePasswordIcon = document.getElementById('hide-password');
        // const showPasswordIcon = document.getElementById('show-password');
        //
        // // Başlangıçta show-password ikonunu gizle
        // showPasswordIcon.style.display = 'none';
        //
        // togglePassword.addEventListener('click', function() {
        //     // Password input tipini değiştir
        //     const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        //     passwordInput.setAttribute('type', type);
        //
        //     // İkonları değiştir
        //     if (type === 'password') {
        //         hidePasswordIcon.style.display = 'inline-block';
        //         showPasswordIcon.style.display = 'none';
        //     } else {
        //         hidePasswordIcon.style.display = 'none';
        //         showPasswordIcon.style.display = 'inline-block';
        //     }
        // });
    }
    // document.addEventListener('DOMContentLoaded', function() {
    //     const passwordInput = document.querySelector('[type="password"]');
    //     const togglePassword = document.querySelector('.toggle-password');
    //     const hidePasswordIcon = document.getElementById('hide-password');
    //     const showPasswordIcon = document.getElementById('show-password');
    //
    //     // Başlangıçta show-password ikonunu gizle
    //     showPasswordIcon.style.display = 'none';
    //
    //     togglePassword.addEventListener('click', function() {
    //         // Password input tipini değiştir
    //         const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
    //         passwordInput.setAttribute('type', type);
    //
    //         // İkonları değiştir
    //         if (type === 'password') {
    //             hidePasswordIcon.style.display = 'inline-block';
    //             showPasswordIcon.style.display = 'none';
    //         } else {
    //             hidePasswordIcon.style.display = 'none';
    //             showPasswordIcon.style.display = 'inline-block';
    //         }
    //     });
    // });
</script>
{% block footer_js %}

{% endblock %}

</body>
</html>
