{# templates/bundles/NelmioApiDocBundle/SwaggerUi/index.html.twig #}

{#
To avoid a "reached nested level" error an exclamation mark `!` has to be added
See https://symfony.com/blog/new-in-symfony-3-4-improved-the-overriding-of-templates
#}
{% extends '@!NelmioApiDoc/SwaggerUi/index.html.twig' %}

{#
Change Swagger UI configuration
All parameters are explained on Swagger UI website:
https://swagger.io/docs/open-source-tools/swagger-ui/usage/configuration/
#}
{#{% block swagger_initialization %}#}
{#    <script type="text/javascript">#}
{#        window.onload = () => {#}
{#            loadSwaggerUI({#}
{#                defaultModelsExpandDepth: -1,#}
{#                deepLinking: true,#}
{#            });#}
{#        };#}
{#    </script>#}
{#{% endblock %}#}

{#
Change Redocly configuration
All parameters are explained on Redocly website:
https://redocly.com/docs/redoc/config/
#}
{% block swagger_initialization %}
    <script type="text/javascript">
        window.onload = () => {
            loadRedocly({
                expandResponses: '200,201',
                hideDownloadButton: true,
            });
        };
    </script>
{% endblock %}

{# Import your own stylesheet #}
{% block stylesheets %}

    {{ parent() }}
{#    <link rel="stylesheet" href="{{ asset('css/custom-swagger-styles.css') }}">#}
{% endblock stylesheets %}

{# Import your own script #}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('js/custom-request-signer.js') }}"></script>
    <script>
		window.onload = function() {
			const ui = SwaggerUIBundle({
				url: "{{ swagger_data.url }}",
				dom_id: '#swagger-ui',
				presets: [
					SwaggerUIBundle.presets.apis,
				],
				plugins: [
					function HtmlRenderPlugin() {
						return {
							wrapComponents: {
								ResponseBody: (Original, system) => (props) => {
									if (props.content && props.content.includes("<html")) {
										return React.createElement("iframe", {
											srcDoc: props.content,
											style: {width: "100%", height: "300px", border: "1px solid #ccc"}
										});
									}
									return React.createElement(Original, props);
								}
							}
						}
					}
				]
			});
			window.ui = ui;
		}
    </script>
{% endblock javascripts %}
