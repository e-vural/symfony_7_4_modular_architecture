<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>{{ block('title') }}</title>
    <link rel="stylesheet" href="{{ asset('assets/css/bootstrap-4.5.min.css') }}"
          integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link rel= "stylesheet" href= "{{ asset('assets/line-awesome/css/line-awesome.min.css') }}" >

    <style>
        body {
            margin-top: 20px;
            background: #f6f9fc;
        }

        .account-block {
            padding: 0;
            background-image: url(https://bootdey.com/img/Content/bg1.jpg);
            background-repeat: no-repeat;
            background-size: cover;
            height: 100%;
            position: relative;
        }

        .account-block .overlay {
            -webkit-box-flex: 1;
            -ms-flex: 1;
            flex: 1;
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .account-block .account-testimonial {
            text-align: center;
            color: #fff;
            position: absolute;
            margin: 0 auto;
            padding: 0 1.75rem;
            bottom: 3rem;
            left: 0;
            right: 0;
        }

        .text-theme {
            /*color: #5369f8 !important;*/
            color: #0b0b0c !important;
        }

        .btn-theme {
            /*background-color: #5369f8;*/
            /*border-color: #5369f8;*/
            /*color: #fff;*/
            background-color: #ffffff;
            border-color: #000000;
            color: #000000;


        }
    </style>

    <style>
        .success{
            color: #1c7430;
        }
        ul{
            margin: 0;
            padding: 0;
            list-style-type: none;
        }

    </style>
</head>
<body>
<div id="main-wrapper" class="container">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card border-0">
                <div class="card-body p-0">
                    <div class="row no-gutters">
                        <div class="offset-lg-3 col-lg-6">
                            <div class="p-5">
                                <div class="mb-5">
                                    <h3 class="h4 font-weight-bold text-theme">
                                        {% block title %}

                                        {% endblock %}
                                    </h3>
                                </div>

                                {% block content %}
                                {% endblock content %}
                            </div>

                        </div>


                    </div>

                </div>
                <!-- end card-body -->
            </div>
            <!-- end card -->

            {% block footer %}

            {% endblock %}


            <!-- end row -->

        </div>
        <!-- end col -->
    </div>
    <!-- Row -->
</div>
<script src="{{ asset('assets/js/password-strength.js') }}"></script>


<script>

    // Usage
    new PasswordStrength({
        selector: ".password-strength-meter",
        infoSelector: "#password-strength-info-div",

        // descriptions: {
        //     length: "Must contain at least 8 characters",
        //     lowercase: "Must include a lowercase letter",
        //     uppercase: "Must include an uppercase letter",
        //     specialChar: "Must contain a special character"
        // },
        // callback: function (key, isValid) {
        //     console.log(key + " is " + (isValid ? "valid" : "invalid"));
        // },
    });

    var inputs = document.querySelectorAll("input");

    inputs.forEach((input) => {
        input.addEventListener("focus", (event) => {
            console.log("focus")

            const focusedElement = event.target;
            // Eğer odaklanan bir input alanıysa işlem yap
            if (focusedElement.tagName === "INPUT" || focusedElement.tagName === "TEXTAREA") {
                // Elementin sayfa içindeki dikey pozisyonunu al
                const elementPosition = focusedElement.getBoundingClientRect().top;


                // Sayfanın şu anki scroll pozisyonu
                const currentScroll = window.pageYOffset || document.documentElement.scrollTop;

                // Elementin bulunduğu pozisyona göre sayfa scroll'unu ayarla
                // Ekstra bir offset eklemek istersen (örneğin 20px yukarı), bunu ekle:
                const offset = -30;

                window.scrollTo({
                    top: currentScroll + elementPosition + offset,
                    behavior: "smooth", // Scroll animasyonlu olsun
                });
            }

        });
    });
</script>
{% block footer_js %}

{% endblock %}

</body>
</html>
